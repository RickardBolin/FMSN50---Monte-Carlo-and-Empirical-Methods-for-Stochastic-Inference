clc
close all
clear
addpath('Data')
load coal_mine_disasters.mat

% Number of breakpoints (not including start and end)
d = 5;
% Hyperparameter psi, chosen by us
psi = 25;
% Initial breakpoints (together with start- and endpoint)
t = linspace(1658, 1980, d+2)';
% Initialize lambda
cond_lambda = 5;
    
steps = 10000;
t_tracker = zeros(d+2, steps);
accidents = zeros(d+1, 1);


rhos = linspace(0,0.1,50);
nrhos = length(rhos);

psis = linspace(0,0.1,50);


acceptance_rate = zeros(nrhos,1);

for psi_index = 1:npsis
for rho_index = 1:nrhos
    for step = 1:steps
        % Get number of accidents in each interval
        startpoints = t(1:end-1);
        endpoints = t(2:end);
        for i = 1:length(startpoints)
            accidents(i) = sum(length(T(T > startpoints(i) & T < endpoints(i))));
        end

        % Draw (theta|lambda, t, T) 
        cond_theta = gamrnd((2*d+2)*ones(d+1,1), (1/(psi+sum(cond_lambda)))*ones(d+1,1));
        % Draw (lambda|theta, t, T)  
        cond_lambda = gamrnd((accidents+2), 1./((endpoints-startpoints)+cond_theta));
        % Calculate (t|theta, lambda, T) with a Metropolis-Hastings sampler  
        [t, accepted] = MCMC_MH(rhos(rho_index) ,cond_lambda, t, T);
        
        acceptance_rate(rho_index,1) = acceptance_rate(rho_index,1) + accepted;
        % Save the current state of the random walk
        t_tracker(:,step) = t;
        
        if(mod(step,floor(steps/100)) == 0)
           q = step/steps;
           clc
           disp([num2str(rho_index) '/' num2str(nrhos) ' ' num2str(100*q) '% |' char(ones(1,floor(50*q))*'=') char(ones(1, ceil(50 - 50*q))*' ') '|'])       
        end

    end
    acceptance_rate(rho_index,1) = acceptance_rate(rho_index,1)/steps;
end
end
%% plots

%plot acceptance rate
figure
scatter(rhos, acceptance_rate)
title('Acceptance rate dependent on rho')

ylabel('Acceptance rate')
xlabel('Rho')
% Plot the random walks
figure
hold on
for i = 1:d+2
    plot(t_tracker(i,:))
end
hold off
ylim([1600 2000])
